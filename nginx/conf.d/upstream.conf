# 업스트림 서버 최적화 설정
# VibeMusic 백엔드 및 프론트엔드 서버 그룹

# API 서버 클러스터 (로드 밸런싱)
upstream vibemusic_api_cluster {
    # 로드 밸런싱 알고리즘
    least_conn;

    # 백엔드 API 서버들
    server api:8000 max_fails=3 fail_timeout=30s weight=1;
    # 향후 확장을 위한 추가 서버 (주석 처리)
    # server api-2:8000 max_fails=3 fail_timeout=30s weight=1;
    # server api-3:8000 max_fails=3 fail_timeout=30s weight=1;

    # 연결 풀링 최적화
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# 프론트엔드 서버 클러스터
upstream vibemusic_frontend_cluster {
    least_conn;

    # 프론트엔드 서버들
    server frontend:80 max_fails=3 fail_timeout=30s weight=1;
    # 향후 확장을 위한 추가 서버 (주석 처리)
    # server frontend-2:80 max_fails=3 fail_timeout=30s weight=1;

    # 연결 풀링
    keepalive 16;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# WebSocket 전용 업스트림 (Sticky Session 고려)
upstream vibemusic_websocket {
    # WebSocket을 위한 IP 해시 기반 분산 (세션 유지)
    ip_hash;

    server api:8000 max_fails=2 fail_timeout=30s;
    # server api-2:8000 max_fails=2 fail_timeout=30s;

    # WebSocket 연결 최적화
    keepalive 8;
    keepalive_timeout 300s;
}

# 정적 파일 서빙을 위한 업스트림
upstream vibemusic_static {
    least_conn;

    server frontend:80 max_fails=2 fail_timeout=15s;

    keepalive 8;
    keepalive_requests 1000;
    keepalive_timeout 60s;
}